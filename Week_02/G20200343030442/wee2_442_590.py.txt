#wee2_442_590.py
#--*--coding:utf-8--*--
# Definition for a Node.
# class Node:
#     def __init__(self, val=None, children=None):
#         self.val = val
#         self.children = children
# 递归
class Solution:
    def postorder(self, root: 'Node') :
        if root is None:
            return []
        res = []
        for boby in root.children:
            res.extend(self.postorder(boby))
        res.append(root.val)
        return res
# 迭代
class Solution:
    def postorder(self, root: 'Node') :
        if root is None:
            return []
        stack , ans = [root] , []
        while stack :
            root = stack.pop()
            ans.append(root.val)
            for child in root.children:
                stack.append(child)
        return ans[::-1]
