# wee2_442_589.py
#--*--coding:utf-8--*--
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
# 递归
class Solution:
    def preorder(self, root: 'Node') -> List[int]:
        if root is None:
            return []
        ans = []
        ans.append(root.val)
        for child in root.children:
            ans.extend(self.preorder(child))
        return ans
# 迭代
class Solution:
    def preorder(self, root: 'Node') -> List[int]:
        if root is None:
            return []
        stack , ans = [root] , []
        while stack:
            root = stack.pop()
            ans.append(root.val)
            # for child in root.children[::-1]:
            #             #     stack.append(child)
            stack.extend(root.children[::-1])
        return ans
