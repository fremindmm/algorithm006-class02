# --*--coding:utf-8--*--
# 暴力移动(超时)
def rotate(nums,k):
    if len(nums) == 0:
        return
    j = 0
    while j < k:
        temp = nums[len(nums) - 1]
        for i in range(len(nums)):
            nums[len(nums) - 1 - i] = nums[len(nums) - 2 -i]
        nums[0] = temp
        j += 1
    return nums

a1 = [8,2,0,4,1,4,2,1,0,6,6,2,5,6,6,2,7,9,4,1,3,9,6,5,4,8]
a2 = [1,2,3,4,5,6,7]
a3 = [1,2,3,4,5,6,7]
a4 = [1,2]
a5 = [1]
a6 = []
k1 = 1
k2 = 2
k3 = 3
print(rotate(a1,k1))
print(rotate(a2,k2))
print(rotate(a3,k3))
print(rotate(a4,k3))
print(rotate(a5,k3))
print(rotate(a6,k3))



#--*--coding:utf-8--*--
#思路：切片 + 拼接 +反转

def rotate(nums,k):
    long = len(nums)
    if long == 0 :
        return
    if k <= len(nums):
        return nums[-k::] + nums[:long - k:]
    else:
        s = k % long
        if s == 0:  #
            return nums[-s::]
        else :
            return nums[-s::] + nums[:long - s:]  # -k 和 -s 可以归为一类
合并上述情况，总结def如下：

def rotate(nums, k):
    n = len(nums)
    if  k is None or k <= 0 or n == 0 :
        return
    k = k % n
    if k == 0:
        return nums
    else:
        nums[:] = nums[-k:] + nums[:n - k]
    return nums
a1 = [8,2,0,4,1,4,2,1,0,6,6,2,5,6,6,2,7,9,4,1,3,9,6,5,4,8]
a2 = [1,2,3,4,5,6,7]
a3 = [1,2,3,4,5,6,7]
a4 = [1,2]
a5 = [1]
a6 = []
a7 = [1,2,3]
k1 = 1
k2 = 2
k3 = 3
print(rotate(a1,k1))
print(rotate(a2,k2))
print(rotate(a3,k3))
print(rotate(a4,3))
print(rotate(a4,4))
print(rotate(a4,5))
print(rotate(a4,6))
print(rotate(a4,7))
print(rotate(a4,8))
print(rotate(a4,9))
print(rotate(a4,33))
print(rotate(a5,k3))
print(rotate(a6,k3))
print(rotate(a7,1))
print(rotate(a7,2))
print(rotate(a7,3))
print(rotate(a7,4))
print(rotate(a7,5))
print(rotate(a7,6))
print(rotate(a7,7))


#--*--coding:utf-8--*--
#思路：切片 + 拼接 +反转

def reverse(nums, i, j):
    while i < j:
        nums[i], nums[j] = nums[j], nums[i]
        i, j = i + 1, j - 1
    return nums

def rotate(nums,k):
    l = len(nums) - 1
    if k is None or k <= 0 :
        return
    if len(nums) == 0 :
        return nums
    k = k % len(nums)
    if k == 0 :
        return nums
    else:
        reverse(nums,0,l - k)
        reverse(nums,l - k + 1,l)
        reverse(nums,0 ,l)
    return nums

# a1 = [8,2,0,4,1,4,2,1,0,6,6,2,5,6,6,2,7,9,4,1,3,9,6,5,4,8]
# a2 = [1,2,3,4,5,6,7]
# a3 = [1,2,3,4,5,6,7]
a4 = [1,2]
# a5 = [1]
# a6 = []
# a7 = [1,2,3]
# k1 = 1
# k2 = 2
# k3 = 3
# print(rotate(a1,k1))
# print(rotate(a2,k2))
# print(rotate(a3,k3))
print(rotate([1,2],3))
print(rotate([1,2],4))
print(rotate([1,2],5))
print(rotate([1,2],6))
print(rotate([1,2],7))
print(rotate([1,2],8))
print(rotate([1,2],9))
print(rotate([1,2],33))
# print(rotate(a5,k3))
# print(rotate(a6,k3))
# print(rotate(a7,1))
# print(rotate(a7,2))
# print(rotate(a7,3))
# print(rotate(a7,4))
# print(rotate(a7,5))
# print(rotate(a7,6))
# print(rotate(a7,7))


