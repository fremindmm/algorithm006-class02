<?php
/**
 * 给定一个整数，编写一个函数来判断它是否是 2 的幂次方。
 * 特点：最高位为1，其他位都是0
 */

class Solution
{
    /**
     * 使用 x & (-x)获取最右边的1：
     * 在补码表示法中，-x = ~x + 1。换句话说，要计算 -x，则要将 x 所有位取反再加 1。
     * 在二进制表示中，~x + 1 表示将该 1 移动到 ~x 中最右边的 0 的位置上，并将所有较低位的位设置为 0。
     * 而 ~x 最右边的 0 的位置对应于 x 最右边的 1 的位置。
     *
     * 总而言之，-x = ~x + 1，此操作将 x 所有位取反，但是最右边的 1 除外。
     * 因此 x 和 -x 只有一个共同点：最右边的1。这说明 x & (-x) 将保留最右边的1。并将其他的位设置为0
     *
     * 检测是否为2的幂：
     * 通过x & (-x)保留了最右边的1，并将其他位置设置为0，若x为2的幂，则它的二进制表示中只包含一个1，则有x & (-x) = x，否则x & (-x) != x
     * @param $n
     * @return bool
     */
    function isPowerOfTwo($n)
    {
        return $n > 0 && ($n & -$n) == $n;
    }

    /**
     * 使用x & (x - 1) 去除二进制最右边的1
     * 如果x & (x - 1) == 0 则x是2的幂，否则不是
     * @param $n
     * @return bool
     */
    function isPowerOfTwo2($n)
    {
        return $n > 0 && ($n & ($n - 1)) == 0;
    }
}